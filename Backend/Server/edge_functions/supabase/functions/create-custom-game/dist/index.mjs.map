{"version":3,"sources":["../index.ts","../../../../../../lib/games/create_custom_game.js"],"sourcesContent":["import { serve } from \"https://deno.land/std/http/server.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\nimport { createCustomGame } from \"../../../../../lib/games/create_custom_game.js\";\n\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\n};\n\nserve(async (req) => {\n  if (req.method === \"OPTIONS\") return new Response(\"ok\", { headers: corsHeaders });\n\n  const { questionSetId, userId, name } = await req.json();\n  if (!questionSetId || !userId) {\n    return new Response(\"Missing questionSetId or userId\", { status: 400, headers: corsHeaders });\n  }\n\n  const supabase = createClient(\n    Deno.env.get(\"SUPABASE_URL\")!,\n    Deno.env.get(\"SUPABASE_ANON_KEY\")!,\n    { global: { headers: { Authorization: req.headers.get(\"Authorization\") } } }\n  );\n\n  try {\n    const id = await createCustomGame(supabase, questionSetId, userId, name);\n    return new Response(JSON.stringify({ id }), {\n      status: 200,\n      headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n    });\n  } catch (error) {\n    return new Response(JSON.stringify({ error: error.message }), { status: 500, headers: corsHeaders });\n  }\n});\n","export const createCustomGame = async (supabase, questionSetId, userId, name) => {\r\n  if (!name) {\r\n    name = \"unnamed\";\r\n  }\r\n  const { data, error } = await supabase\r\n    .from(\"games\")\r\n    .insert({\r\n      host: userId,\r\n      question_set: questionSetId,\r\n      name: name,\r\n      state: \"pending\",\r\n    })\r\n    .select(\"id\")\r\n    .single();\r\n\r\n  if (error) throw error;\r\n\r\n  return data.id;\r\n};\r\n"],"mappings":";AAAA,SAAS,aAAa;AACtB,SAAS,oBAAoB;;;ACDtB,IAAM,mBAAmB,OAAO,UAAU,eAAe,QAAQ,SAAS;AAC/E,MAAI,CAAC,MAAM;AACT,WAAO;AAAA,EACT;AACA,QAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAC3B,KAAK,OAAO,EACZ,OAAO;AAAA,IACN,MAAM;AAAA,IACN,cAAc;AAAA,IACd;AAAA,IACA,OAAO;AAAA,EACT,CAAC,EACA,OAAO,IAAI,EACX,OAAO;AAEV,MAAI,MAAO,OAAM;AAEjB,SAAO,KAAK;AACd;;;ADdA,IAAM,cAAc;AAAA,EAClB,+BAA+B;AAAA,EAC/B,gCAAgC;AAClC;AAEA,MAAM,OAAO,QAAQ;AACnB,MAAI,IAAI,WAAW,UAAW,QAAO,IAAI,SAAS,MAAM,EAAE,SAAS,YAAY,CAAC;AAEhF,QAAM,EAAE,eAAe,QAAQ,KAAK,IAAI,MAAM,IAAI,KAAK;AACvD,MAAI,CAAC,iBAAiB,CAAC,QAAQ;AAC7B,WAAO,IAAI,SAAS,mCAAmC,EAAE,QAAQ,KAAK,SAAS,YAAY,CAAC;AAAA,EAC9F;AAEA,QAAM,WAAW;AAAA,IACf,KAAK,IAAI,IAAI,cAAc;AAAA,IAC3B,KAAK,IAAI,IAAI,mBAAmB;AAAA,IAChC,EAAE,QAAQ,EAAE,SAAS,EAAE,eAAe,IAAI,QAAQ,IAAI,eAAe,EAAE,EAAE,EAAE;AAAA,EAC7E;AAEA,MAAI;AACF,UAAM,KAAK,MAAM,iBAAiB,UAAU,eAAe,QAAQ,IAAI;AACvE,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,GAAG,CAAC,GAAG;AAAA,MAC1C,QAAQ;AAAA,MACR,SAAS,EAAE,GAAG,aAAa,gBAAgB,mBAAmB;AAAA,IAChE,CAAC;AAAA,EACH,SAAS,OAAO;AACd,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,MAAM,QAAQ,CAAC,GAAG,EAAE,QAAQ,KAAK,SAAS,YAAY,CAAC;AAAA,EACrG;AACF,CAAC;","names":[]}