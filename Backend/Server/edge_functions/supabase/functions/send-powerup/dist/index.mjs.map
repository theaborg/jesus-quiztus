{"version":3,"sources":["../index.ts","../../../../../../lib/powerups/send_powerup.js"],"sourcesContent":["import { serve } from \"https://deno.land/std@0.168.0/http/server.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\nimport { sendPowerup } from \"../../../../../lib/powerups/send_powerup.js\";\n\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\":\n    \"authorization, x-client-info, apikey, content-type\",\n};\n\nserve(async (req) => {\n  if (req.method === \"OPTIONS\") {\n    return new Response(\"ok\", { headers: corsHeaders });\n  }\n\n  try {\n    const { game_id, sender_id, receiver_id, power_type } = await req.json();\n\n    const supabaseUrl = Deno.env.get(\"SUPABASE_URL\");\n    const supabaseAnonKey = Deno.env.get(\"SUPABASE_ANON_KEY\");\n\n    if (!supabaseUrl || !supabaseAnonKey) {\n      throw new Error(\n        \"Missing SUPABASE_URL or SUPABASE_ANON_KEY environment variables\"\n      );\n    }\n\n    const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n      global: {\n        headers: { Authorization: req.headers.get(\"Authorization\") ?? \"\" },\n      },\n    });\n\n    const { error, data } = await sendPowerup(\n      supabase,\n      game_id,\n      sender_id,\n      receiver_id,\n      power_type\n    );\n\n    if (error) {\n      return new Response(JSON.stringify({ error: error.message }), {\n        status: 500,\n        headers: corsHeaders,\n      });\n    }\n\n    return new Response(JSON.stringify({ success: true, data }), {\n      status: 200,\n      headers: corsHeaders,\n    });\n  } catch (err) {\n    console.error(\"Request parsing failed\", err);\n    return new Response(JSON.stringify({ error: \"Invalid request body\" }), {\n      status: 400,\n      headers: corsHeaders,\n    });\n  }\n});\n","export const sendPowerup = async (\n  supabaseClient,\n  gameId,\n  senderId,\n  receiverId,\n  power_type\n) => {\n  const { error, data } = await supabaseClient.from(\"Powerups\").insert({\n    game: gameId,\n    sender_id: senderId,\n    receiver_id: receiverId,\n    type: power_type,\n  });\n\n  if (error) {\n    console.error(\"Error in sendPowerup:\", error.message);\n    return { error };\n  }\n\n  return { data };\n};\n"],"mappings":";AAAA,SAAS,aAAa;AACtB,SAAS,oBAAoB;;;ACDtB,IAAM,cAAc,OACzB,gBACA,QACA,UACA,YACA,eACG;AACH,QAAM,EAAE,OAAO,KAAK,IAAI,MAAM,eAAe,KAAK,UAAU,EAAE,OAAO;AAAA,IACnE,MAAM;AAAA,IACN,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,EACR,CAAC;AAED,MAAI,OAAO;AACT,YAAQ,MAAM,yBAAyB,MAAM,OAAO;AACpD,WAAO,EAAE,MAAM;AAAA,EACjB;AAEA,SAAO,EAAE,KAAK;AAChB;;;ADhBA,IAAM,cAAc;AAAA,EAClB,+BAA+B;AAAA,EAC/B,gCACE;AACJ;AAEA,MAAM,OAAO,QAAQ;AACnB,MAAI,IAAI,WAAW,WAAW;AAC5B,WAAO,IAAI,SAAS,MAAM,EAAE,SAAS,YAAY,CAAC;AAAA,EACpD;AAEA,MAAI;AACF,UAAM,EAAE,SAAS,WAAW,aAAa,WAAW,IAAI,MAAM,IAAI,KAAK;AAEvE,UAAM,cAAc,KAAK,IAAI,IAAI,cAAc;AAC/C,UAAM,kBAAkB,KAAK,IAAI,IAAI,mBAAmB;AAExD,QAAI,CAAC,eAAe,CAAC,iBAAiB;AACpC,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,UAAM,WAAW,aAAa,aAAa,iBAAiB;AAAA,MAC1D,QAAQ;AAAA,QACN,SAAS,EAAE,eAAe,IAAI,QAAQ,IAAI,eAAe,KAAK,GAAG;AAAA,MACnE;AAAA,IACF,CAAC;AAED,UAAM,EAAE,OAAO,KAAK,IAAI,MAAM;AAAA,MAC5B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,QAAI,OAAO;AACT,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,MAAM,QAAQ,CAAC,GAAG;AAAA,QAC5D,QAAQ;AAAA,QACR,SAAS;AAAA,MACX,CAAC;AAAA,IACH;AAEA,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,SAAS,MAAM,KAAK,CAAC,GAAG;AAAA,MAC3D,QAAQ;AAAA,MACR,SAAS;AAAA,IACX,CAAC;AAAA,EACH,SAAS,KAAK;AACZ,YAAQ,MAAM,0BAA0B,GAAG;AAC3C,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,uBAAuB,CAAC,GAAG;AAAA,MACrE,QAAQ;AAAA,MACR,SAAS;AAAA,IACX,CAAC;AAAA,EACH;AACF,CAAC;","names":[]}