{"version":3,"sources":["../index.ts","../../../../../../lib/questions/create_set.js"],"sourcesContent":["import { serve } from \"https://deno.land/std/http/server.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\nimport { createSet } from \"../../../../../lib/questions/create_set.js\";\n\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\n};\n\nserve(async (req) => {\n  if (req.method === \"OPTIONS\") return new Response(\"ok\", { headers: corsHeaders });\n\n  const { name, category, amount, userId } = await req.json();\n  if (!userId || !amount) {\n    return new Response(\"Missing userId or amount\", { status: 400, headers: corsHeaders });\n  }\n\n  const supabase = createClient(\n    Deno.env.get(\"SUPABASE_URL\")!,\n    Deno.env.get(\"SUPABASE_ANON_KEY\")!,\n    { global: { headers: { Authorization: req.headers.get(\"Authorization\") } } }\n  );\n\n  try {\n    const id = await createSet(supabase, name, category, amount, userId);\n    return new Response(JSON.stringify({ id }), {\n      headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n    });\n  } catch (error) {\n    return new Response(JSON.stringify({ error: error.message }), { status: 500, headers: corsHeaders });\n  }\n});\n","export const createSet = async (supabase, name, category, amount, userId) => {\r\n  const { data, error } = await supabase\r\n    .from(\"QuestionsSet\")\r\n    .insert({\r\n      name: name || \"Name\",\r\n      category: category || \"Category\",\r\n      user: userId,\r\n      amount: amount,\r\n    })\r\n    .select(\"id\") // tror att detta h√§mtar tillbaka id:t\r\n    .single();\r\n\r\n  if (error) throw error;\r\n  return data.id;\r\n};"],"mappings":";AAAA,SAAS,aAAa;AACtB,SAAS,oBAAoB;;;ACDtB,IAAM,YAAY,OAAO,UAAU,MAAM,UAAU,QAAQ,WAAW;AAC3E,QAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAC3B,KAAK,cAAc,EACnB,OAAO;AAAA,IACN,MAAM,QAAQ;AAAA,IACd,UAAU,YAAY;AAAA,IACtB,MAAM;AAAA,IACN;AAAA,EACF,CAAC,EACA,OAAO,IAAI,EACX,OAAO;AAEV,MAAI,MAAO,OAAM;AACjB,SAAO,KAAK;AACd;;;ADVA,IAAM,cAAc;AAAA,EAClB,+BAA+B;AAAA,EAC/B,gCAAgC;AAClC;AAEA,MAAM,OAAO,QAAQ;AACnB,MAAI,IAAI,WAAW,UAAW,QAAO,IAAI,SAAS,MAAM,EAAE,SAAS,YAAY,CAAC;AAEhF,QAAM,EAAE,MAAM,UAAU,QAAQ,OAAO,IAAI,MAAM,IAAI,KAAK;AAC1D,MAAI,CAAC,UAAU,CAAC,QAAQ;AACtB,WAAO,IAAI,SAAS,4BAA4B,EAAE,QAAQ,KAAK,SAAS,YAAY,CAAC;AAAA,EACvF;AAEA,QAAM,WAAW;AAAA,IACf,KAAK,IAAI,IAAI,cAAc;AAAA,IAC3B,KAAK,IAAI,IAAI,mBAAmB;AAAA,IAChC,EAAE,QAAQ,EAAE,SAAS,EAAE,eAAe,IAAI,QAAQ,IAAI,eAAe,EAAE,EAAE,EAAE;AAAA,EAC7E;AAEA,MAAI;AACF,UAAM,KAAK,MAAM,UAAU,UAAU,MAAM,UAAU,QAAQ,MAAM;AACnE,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,GAAG,CAAC,GAAG;AAAA,MAC1C,SAAS,EAAE,GAAG,aAAa,gBAAgB,mBAAmB;AAAA,IAChE,CAAC;AAAA,EACH,SAAS,OAAO;AACd,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,MAAM,QAAQ,CAAC,GAAG,EAAE,QAAQ,KAAK,SAAS,YAAY,CAAC;AAAA,EACrG;AACF,CAAC;","names":[]}