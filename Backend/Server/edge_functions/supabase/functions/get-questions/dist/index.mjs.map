{"version":3,"sources":["../index.ts","../../../../../../lib/questions/get_questions.js"],"sourcesContent":["import { serve } from \"https://deno.land/std/http/server.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\nimport { getQuestions } from \"../../../../../lib/questions/get_questions.js\";\n\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\n};\n\nserve(async (req) => {\n  if (req.method === \"OPTIONS\") return new Response(\"ok\", { headers: corsHeaders });\n\n  const { questionSetId } = await req.json();\n  if (!questionSetId) {\n    return new Response(\"Missing questionSetId\", { status: 400, headers: corsHeaders });\n  }\n\n  const supabase = createClient(\n    Deno.env.get(\"SUPABASE_URL\")!,\n    Deno.env.get(\"SUPABASE_ANON_KEY\")!,\n    { global: { headers: { Authorization: req.headers.get(\"Authorization\") } } }\n  );\n\n  try {\n    const questions = await getQuestions(supabase, questionSetId);\n    return new Response(JSON.stringify(questions), {\n      headers: { ...corsHeaders, \"Content-Type\": \"application/json\" },\n    });\n  } catch (error) {\n    return new Response(JSON.stringify({ error: error.message }), { status: 500, headers: corsHeaders });\n  }\n});\n","export const getQuestions = async (supabase, questionSetId) => {\r\n  const { data, error } = await supabase\r\n    .from(\"Questions\")\r\n    .select(\"*\")\r\n    .eq(\"set\", questionSetId);\r\n\r\n  if (error) throw error;\r\n\r\n  return data.map((q) => ({\r\n    text: q.question,\r\n    alternatives: shuffle([q.answer, q.alt_1, q.alt_2, q.alt_3]),\r\n    correct: q.answer,\r\n    category: q.category,\r\n    image: q.image,\r\n    id: q.id,\r\n  }));\r\n};\r\n\r\nconst shuffle = (array) => array.sort(() => Math.random() - 0.5);"],"mappings":";AAAA,SAAS,aAAa;AACtB,SAAS,oBAAoB;;;ACDtB,IAAM,eAAe,OAAO,UAAU,kBAAkB;AAC7D,QAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAC3B,KAAK,WAAW,EAChB,OAAO,GAAG,EACV,GAAG,OAAO,aAAa;AAE1B,MAAI,MAAO,OAAM;AAEjB,SAAO,KAAK,IAAI,CAAC,OAAO;AAAA,IACtB,MAAM,EAAE;AAAA,IACR,cAAc,QAAQ,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;AAAA,IAC3D,SAAS,EAAE;AAAA,IACX,UAAU,EAAE;AAAA,IACZ,OAAO,EAAE;AAAA,IACT,IAAI,EAAE;AAAA,EACR,EAAE;AACJ;AAEA,IAAM,UAAU,CAAC,UAAU,MAAM,KAAK,MAAM,KAAK,OAAO,IAAI,GAAG;;;ADd/D,IAAM,cAAc;AAAA,EAClB,+BAA+B;AAAA,EAC/B,gCAAgC;AAClC;AAEA,MAAM,OAAO,QAAQ;AACnB,MAAI,IAAI,WAAW,UAAW,QAAO,IAAI,SAAS,MAAM,EAAE,SAAS,YAAY,CAAC;AAEhF,QAAM,EAAE,cAAc,IAAI,MAAM,IAAI,KAAK;AACzC,MAAI,CAAC,eAAe;AAClB,WAAO,IAAI,SAAS,yBAAyB,EAAE,QAAQ,KAAK,SAAS,YAAY,CAAC;AAAA,EACpF;AAEA,QAAM,WAAW;AAAA,IACf,KAAK,IAAI,IAAI,cAAc;AAAA,IAC3B,KAAK,IAAI,IAAI,mBAAmB;AAAA,IAChC,EAAE,QAAQ,EAAE,SAAS,EAAE,eAAe,IAAI,QAAQ,IAAI,eAAe,EAAE,EAAE,EAAE;AAAA,EAC7E;AAEA,MAAI;AACF,UAAM,YAAY,MAAM,aAAa,UAAU,aAAa;AAC5D,WAAO,IAAI,SAAS,KAAK,UAAU,SAAS,GAAG;AAAA,MAC7C,SAAS,EAAE,GAAG,aAAa,gBAAgB,mBAAmB;AAAA,IAChE,CAAC;AAAA,EACH,SAAS,OAAO;AACd,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,MAAM,QAAQ,CAAC,GAAG,EAAE,QAAQ,KAAK,SAAS,YAAY,CAAC;AAAA,EACrG;AACF,CAAC;","names":[]}