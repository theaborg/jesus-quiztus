{"version":3,"sources":["../index.ts","../../../../../../lib/questions/update_question.js"],"sourcesContent":["import { serve } from \"https://deno.land/std/http/server.ts\";\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2\";\nimport { updateQuestion } from \"../../../../../lib/questions/update_question.js\";\n\nconst corsHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\": \"authorization, x-client-info, apikey, content-type\",\n};\n\nserve(async (req) => {\n  if (req.method === \"OPTIONS\") return new Response(\"ok\", { headers: corsHeaders });\n\n  const { id, question, answer, alt1, alt2, alt3, category } = await req.json();\n  if (!id || !question || !answer) {\n    return new Response(\"Missing required fields\", { status: 400, headers: corsHeaders });\n  }\n\n  const supabase = createClient(\n    Deno.env.get(\"SUPABASE_URL\")!,\n    Deno.env.get(\"SUPABASE_ANON_KEY\")!,\n    { global: { headers: { Authorization: req.headers.get(\"Authorization\") } } }\n  );\n\n  try {\n    await updateQuestion(supabase, id, question, answer, alt1, alt2, alt3, category);\n    return new Response(\"Question updated\", { headers: corsHeaders });\n  } catch (error) {\n    return new Response(JSON.stringify({ error: error.message }), { status: 500, headers: corsHeaders });\n  }\n});\n","export const updateQuestion = async (\r\n  supabase,\r\n  id,\r\n  question,\r\n  answer,\r\n  alt1,\r\n  alt2,\r\n  alt3,\r\n  category\r\n) => {\r\n  console.log(\"Updating question with ID:\", id);\r\n  const { error } = await supabase\r\n    .from(\"Questions\")\r\n    .update({\r\n      question,\r\n      answer,\r\n      alt_1: alt1,\r\n      alt_2: alt2,\r\n      alt_3: alt3,\r\n      category,\r\n    })\r\n    .eq(\"id\", id);\r\n\r\n  if (error) throw error;\r\n};"],"mappings":";AAAA,SAAS,aAAa;AACtB,SAAS,oBAAoB;;;ACDtB,IAAM,iBAAiB,OAC5B,UACA,IACA,UACA,QACA,MACA,MACA,MACA,aACG;AACH,UAAQ,IAAI,8BAA8B,EAAE;AAC5C,QAAM,EAAE,MAAM,IAAI,MAAM,SACrB,KAAK,WAAW,EAChB,OAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA,OAAO;AAAA,IACP,OAAO;AAAA,IACP,OAAO;AAAA,IACP;AAAA,EACF,CAAC,EACA,GAAG,MAAM,EAAE;AAEd,MAAI,MAAO,OAAM;AACnB;;;ADpBA,IAAM,cAAc;AAAA,EAClB,+BAA+B;AAAA,EAC/B,gCAAgC;AAClC;AAEA,MAAM,OAAO,QAAQ;AACnB,MAAI,IAAI,WAAW,UAAW,QAAO,IAAI,SAAS,MAAM,EAAE,SAAS,YAAY,CAAC;AAEhF,QAAM,EAAE,IAAI,UAAU,QAAQ,MAAM,MAAM,MAAM,SAAS,IAAI,MAAM,IAAI,KAAK;AAC5E,MAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ;AAC/B,WAAO,IAAI,SAAS,2BAA2B,EAAE,QAAQ,KAAK,SAAS,YAAY,CAAC;AAAA,EACtF;AAEA,QAAM,WAAW;AAAA,IACf,KAAK,IAAI,IAAI,cAAc;AAAA,IAC3B,KAAK,IAAI,IAAI,mBAAmB;AAAA,IAChC,EAAE,QAAQ,EAAE,SAAS,EAAE,eAAe,IAAI,QAAQ,IAAI,eAAe,EAAE,EAAE,EAAE;AAAA,EAC7E;AAEA,MAAI;AACF,UAAM,eAAe,UAAU,IAAI,UAAU,QAAQ,MAAM,MAAM,MAAM,QAAQ;AAC/E,WAAO,IAAI,SAAS,oBAAoB,EAAE,SAAS,YAAY,CAAC;AAAA,EAClE,SAAS,OAAO;AACd,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,MAAM,QAAQ,CAAC,GAAG,EAAE,QAAQ,KAAK,SAAS,YAAY,CAAC;AAAA,EACrG;AACF,CAAC;","names":[]}